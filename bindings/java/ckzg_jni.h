/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ethereum_ckzg4844_CKZG4844JNI */

#ifndef _Included_ethereum_ckzg4844_CKZG4844JNI
#define _Included_ethereum_ckzg4844_CKZG4844JNI
#ifdef __cplusplus
extern "C" {
#endif
#undef ethereum_ckzg4844_CKZG4844JNI_BYTES_PER_G1
#define ethereum_ckzg4844_CKZG4844JNI_BYTES_PER_G1 48L
#undef ethereum_ckzg4844_CKZG4844JNI_BYTES_PER_G2
#define ethereum_ckzg4844_CKZG4844JNI_BYTES_PER_G2 96L
#undef ethereum_ckzg4844_CKZG4844JNI_BYTES_PER_FIELD_ELEMENT
#define ethereum_ckzg4844_CKZG4844JNI_BYTES_PER_FIELD_ELEMENT 32L
#undef ethereum_ckzg4844_CKZG4844JNI_BITS_PER_FIELD_ELEMENT
#define ethereum_ckzg4844_CKZG4844JNI_BITS_PER_FIELD_ELEMENT 255L
#undef ethereum_ckzg4844_CKZG4844JNI_FIELD_ELEMENTS_PER_BLOB
#define ethereum_ckzg4844_CKZG4844JNI_FIELD_ELEMENTS_PER_BLOB 4096L
#undef ethereum_ckzg4844_CKZG4844JNI_FIELD_ELEMENTS_PER_EXT_BLOB
#define ethereum_ckzg4844_CKZG4844JNI_FIELD_ELEMENTS_PER_EXT_BLOB 8192L
#undef ethereum_ckzg4844_CKZG4844JNI_FIELD_ELEMENTS_PER_CELL
#define ethereum_ckzg4844_CKZG4844JNI_FIELD_ELEMENTS_PER_CELL 64L
#undef ethereum_ckzg4844_CKZG4844JNI_CELLS_PER_EXT_BLOB
#define ethereum_ckzg4844_CKZG4844JNI_CELLS_PER_EXT_BLOB 128L
#undef ethereum_ckzg4844_CKZG4844JNI_BYTES_PER_COMMITMENT
#define ethereum_ckzg4844_CKZG4844JNI_BYTES_PER_COMMITMENT 48L
#undef ethereum_ckzg4844_CKZG4844JNI_BYTES_PER_PROOF
#define ethereum_ckzg4844_CKZG4844JNI_BYTES_PER_PROOF 48L
#undef ethereum_ckzg4844_CKZG4844JNI_BYTES_PER_BLOB
#define ethereum_ckzg4844_CKZG4844JNI_BYTES_PER_BLOB 131072L
#undef ethereum_ckzg4844_CKZG4844JNI_BYTES_PER_CELL
#define ethereum_ckzg4844_CKZG4844JNI_BYTES_PER_CELL 2048L
/*
 * Class:     ethereum_ckzg4844_CKZG4844JNI
 * Method:    loadTrustedSetup
 * Signature: (Ljava/lang/String;J)V
 */
JNIEXPORT void JNICALL Java_ethereum_ckzg4844_CKZG4844JNI_loadTrustedSetup__Ljava_lang_String_2J
  (JNIEnv *, jclass, jstring, jlong);

/*
 * Class:     ethereum_ckzg4844_CKZG4844JNI
 * Method:    loadTrustedSetup
 * Signature: ([B[B[BJ)V
 */
JNIEXPORT void JNICALL Java_ethereum_ckzg4844_CKZG4844JNI_loadTrustedSetup___3B_3B_3BJ
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray, jlong);

/*
 * Class:     ethereum_ckzg4844_CKZG4844JNI
 * Method:    freeTrustedSetup
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ethereum_ckzg4844_CKZG4844JNI_freeTrustedSetup
  (JNIEnv *, jclass);

/*
 * Class:     ethereum_ckzg4844_CKZG4844JNI
 * Method:    blobToKZGCommitment
 * Signature: ([B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_ethereum_ckzg4844_CKZG4844JNI_blobToKZGCommitment
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     ethereum_ckzg4844_CKZG4844JNI
 * Method:    computeKZGProof
 * Signature: ([B[B)Lethereum/ckzg4844/ProofAndY;
 */
JNIEXPORT jobject JNICALL Java_ethereum_ckzg4844_CKZG4844JNI_computeKZGProof
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     ethereum_ckzg4844_CKZG4844JNI
 * Method:    computeBlobKZGProof
 * Signature: ([B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_ethereum_ckzg4844_CKZG4844JNI_computeBlobKZGProof
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     ethereum_ckzg4844_CKZG4844JNI
 * Method:    verifyKZGProof
 * Signature: ([B[B[B[B)Z
 */
JNIEXPORT jboolean JNICALL Java_ethereum_ckzg4844_CKZG4844JNI_verifyKZGProof
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     ethereum_ckzg4844_CKZG4844JNI
 * Method:    verifyBlobKZGProof
 * Signature: ([B[B[B)Z
 */
JNIEXPORT jboolean JNICALL Java_ethereum_ckzg4844_CKZG4844JNI_verifyBlobKZGProof
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     ethereum_ckzg4844_CKZG4844JNI
 * Method:    verifyBlobKZGProofBatch
 * Signature: ([B[B[BJ)Z
 */
JNIEXPORT jboolean JNICALL Java_ethereum_ckzg4844_CKZG4844JNI_verifyBlobKZGProofBatch
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray, jlong);

/*
 * Class:     ethereum_ckzg4844_CKZG4844JNI
 * Method:    computeCellsAndKZGProofs
 * Signature: ([B)Lethereum/ckzg4844/CellsAndProofs;
 */
JNIEXPORT jobject JNICALL Java_ethereum_ckzg4844_CKZG4844JNI_computeCellsAndKZGProofs
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     ethereum_ckzg4844_CKZG4844JNI
 * Method:    recoverCellsAndKZGProofs
 * Signature: ([J[B)Lethereum/ckzg4844/CellsAndProofs;
 */
JNIEXPORT jobject JNICALL Java_ethereum_ckzg4844_CKZG4844JNI_recoverCellsAndKZGProofs
  (JNIEnv *, jclass, jlongArray, jbyteArray);

/*
 * Class:     ethereum_ckzg4844_CKZG4844JNI
 * Method:    verifyCellKZGProofBatch
 * Signature: ([B[J[B[B)Z
 */
JNIEXPORT jboolean JNICALL Java_ethereum_ckzg4844_CKZG4844JNI_verifyCellKZGProofBatch
  (JNIEnv *, jclass, jbyteArray, jlongArray, jbyteArray, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
