name: Python Package

on:
  release:
    types:
      - published
    branches:
      - main
  # Allows us run the action manually.
  workflow_dispatch:

jobs:
  build-wheels:
    name: Build wheels for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-13 # x86_64
          - macos-14 # aarch64

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: recursive

      # On Linux, use QEMU to build multiple platforms.
      - name: Setup QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
        with:
          platforms: all

      # Need this for macos-14, which doesn't come with python for some reason.
      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: '3.10'

      # Need this to get cl.exe on the path.
      - name: Set up Visual Studio shell
        if: runner.os == 'Windows'
        uses: egor-tensin/vs-shell@9a932a62d05192eae18ca370155cf877eecc2202 # v2.1

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:

          # We have QEMU setup and can build everything.
          CIBW_ARCHS_LINUX: x86_64 i686 aarch64
          # For some reason these don't use the same distro.
          # musllinux uses apk & manylinux uses yum.
          CIBW_BEFORE_BUILD_LINUX: |
            if command -v apk > /dev/null; then
              apk add --update clang && make -C src blst
            elif command -v yum > /dev/null; then
              yum install -y clang && make -C src blst
            fi

          # Building x86 (32-bit) package is difficult.
          # We're missing the 32-bit Python library.
          CIBW_ARCHS_WINDOWS: AMD64
          # We need blst.lib (via MSVC) which our Makefile doesn't support.
          CIBW_BEFORE_BUILD_WINDOWS: |
            cd blst && build.bat && cp blst.lib ../lib && cp bindings/*.h ../inc

          CIBW_BEFORE_BUILD_MACOS: |
            make -C src blst

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*

  # Build the source distribution under Linux
  build-sdist:
    name: Source distribution
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: '3.10'

      - name: Build source distribution
        run: python setup.py sdist

      - name: Store artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          path: dist/*.tar.gz
          name: sdist


  publish:
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    steps:
      - name: Download wheel artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          pattern: wheels-*
          path: publish-dist
          merge-multiple: true

      - name: Download sdist artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          pattern: sdist
          path: publish-dist
          merge-multiple: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
        with:
          password: ${{ secrets.PYPI_PASSWORD }}
          packages-dir: publish-dist

